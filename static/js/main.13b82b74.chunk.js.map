{"version":3,"sources":["reportWebVitals.js","Card.js","CardList.js","robots.js","SearchBox.js","Scroll.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","className","src","alt","CardList","robots","map","user","i","username","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","changeMessage","message","state","filteredRobots","this","filter","robot","toLowerCase","includes","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qKAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCQCQ,EAbF,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,KAAKC,EAAU,EAAVA,MACrB,OACE,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,cACpD,gCACE,6BAAKJ,IACL,4BAAIC,WCuBCI,EA7BE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAKjB,OACE,8BAQIA,EAAOC,KAAI,SAACC,EAAKC,GAEf,OAAO,cAAC,EAAD,CAECV,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHVQ,SCnBZH,EAAS,CACpB,CACEP,GAAG,EACHC,KAAK,YACLU,SAAS,cACTT,MAAM,yBAER,CACEF,GAAG,EACHC,KAAK,QACLU,SAAS,YACTT,MAAM,mBAER,CACEF,GAAG,EACHC,KAAK,SACLU,SAAS,YACTT,MAAM,oBAER,CACEF,GAAG,EACHC,KAAK,QACLU,SAAS,YACTT,MAAM,sBAER,CACEF,GAAG,EACHC,KAAK,QACLU,SAAS,SACTT,MAAM,oBAER,CACEF,GAAG,EACHC,KAAK,QACLU,SAAS,WACTT,MAAM,uBC3BKU,EAPG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAClB,OACE,uBAAOC,KAAK,SAASC,YAAY,gBAAgBC,SAAUH,KCQhDI,EATA,SAACC,GAChB,OACA,sBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,UACEJ,EAAMK,SADR,QCuEeC,E,kDAvDb,aAAc,IAAD,8BACX,gBAcFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAACC,YAAcF,EAAMG,OAAOC,SAhB/B,EAmBfC,cAAgB,WACZ,EAAKJ,SAAS,CAACK,QAAU,sBAlBzB,EAAKC,MAAQ,CACXD,QAAU,WACVzB,OAASA,EACTqB,YAAc,IALL,E,0CAwBb,WAAS,IAAD,OAEAM,EAAiBC,KAAKF,MAAM1B,OAAO6B,QAAO,SAAAC,GAC9C,OAAOA,EAAMpC,KAAKqC,cAAcC,SAAS,EAAKN,MAAML,YAAYU,kBAalE,OACE,sBAAKnC,UAAU,KAAf,UACE,6BAAKgC,KAAKF,MAAMD,UAEhB,cAAE,EAAF,CAAYnB,aAAcsB,KAAKV,iBAC/B,cAAC,EAAD,UACA,cAAE,EAAF,CAAWlB,OAAQ2B,a,GAhDTM,aCVlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAE,EAAF,MAEFC,SAASC,eAAe,SAM1BvD,M","file":"static/js/main.13b82b74.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","\r\n\r\nconst Card = ({id,name,email}) =>{\r\n  return(\r\n    <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n        <img src={`https://robohash.org/${id}?200x200`} alt=\"RoboImage\"/>\r\n        <div>\r\n          <h2>{name}</h2>\r\n          <p>{email}</p>\r\n        </div>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Card;","import Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n\r\n  // const cardArray = robots.map((user,i) => {\r\n  //   return <Card id={robots[i].id} key={i} name={robots[i].name} email={robots[i].email}/>\r\n  // })\r\n  return(\r\n    <div>\r\n      {/* <Card id={robots[0].id} name={robots[0].name} email={robots[0].email}/>\r\n      <Card id={robots[1].id} name={robots[1].name} email={robots[1].email}/>\r\n      <Card id={robots[2].id} name={robots[2].name} email={robots[2].email}/> */}\r\n\r\n      {/* {cardArray} */}\r\n\r\n      {\r\n        robots.map((user,i) => \r\n        {\r\n          return <Card \r\n                  key = {i}\r\n                  id={robots[i].id} \r\n                  name={robots[i].name} \r\n                  email={robots[i].email}\r\n                  />\r\n        })\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardList;","export const robots = [\r\n  {\r\n    id:1,\r\n    name:\"Amit Shah\",\r\n    username:\"amitshah147\",\r\n    email:\"amitshah147@gmail.com\"\r\n  },\r\n  {\r\n    id:2,\r\n    name:\"kiran\",\r\n    username:\"kittu2108\",\r\n    email:\"kiran@gmail.com\"\r\n  },\r\n  {\r\n    id:3,\r\n    name:\"warner\",\r\n    username:\"warner335\",\r\n    email:\"warner@gmail.com\"\r\n  },\r\n  {\r\n    id:4,\r\n    name:\"rohit\",\r\n    username:\"hitman264\",\r\n    email:\"rohit264@gmail.com\"\r\n  },\r\n  {\r\n    id:5,\r\n    name:\"arjun\",\r\n    username:\"allu26\",\r\n    email:\"allu26@gmail.com\"\r\n  },\r\n  {\r\n    id:6,\r\n    name:\"Dhoni\",\r\n    username:\"dhoni007\",\r\n    email:\"dhoni007@gmail.com\"\r\n  }\r\n]\r\n","\r\nconst SearchBox = ({searchChange}) => {\r\n  return (\r\n    <input type=\"search\" placeholder='Search Robots' onChange={searchChange}/>\r\n  )\r\n}\r\n\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\nreturn (\r\n<div style={{overflowY: 'scroll', border :'3px solid black', height :'500px'}}>\r\n {props.children};\r\n    </div>\r\n)\r\n    \r\n}\r\n\r\nexport default Scroll;\r\n","import React,{Component} from 'react';\r\nimport CardList from './CardList';\r\nimport {robots} from './robots';\r\nimport SearchBox from './SearchBox';\r\nimport Scroll from './Scroll';\r\n\r\n\r\n\r\n\r\n//state is an object that describes the app!\r\n\r\n// const state = {\r\n//   robots : robots,\r\n//   searchfield :''\r\n// }\r\n\r\n \r\n\r\nclass App extends Component {\r\n\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n      message : 'RoboFans',\r\n      robots : robots,\r\n      searchfield : ''\r\n    }\r\n  }\r\n\r\n  // changeMessage = () => {\r\n  //   this.setState({message : \"You subscribed successfully!\"});\r\n  // }\r\n\r\n  //create mothers function\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({searchfield : event.target.value});\r\n  }\r\n\r\nchangeMessage = () => {\r\n    this.setState({message : \"No record found!\"});\r\n  }\r\n\r\n\r\n  render(){\r\n\r\n    const filteredRobots = this.state.robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n    })\r\n\r\n    // if (filteredRobots.length === 0 ) {\r\n    //   this.setState({message : \"No record found!\"});\r\n    // }\r\n\r\n    // Note: The above code will not work. Let me know tomorrow what's the problem with it!\r\n    // Hint : Whenever u update state render() function runs. Think Newtons Think....\r\n    // P.S. : We will solve this problrm tomorrow :) Bt i need reason from you.\r\n    // Yours' Tirth  \r\n\r\n    \r\n    return(\r\n      <div className=\"tc\">\r\n        <h1>{this.state.message}</h1>\r\n        {/* <button type=\"button\" onClick={this.changeMessage}>SUBSCRIBE!</button> */}\r\n        < SearchBox searchChange={this.onSearchChange}/>\r\n        <Scroll>\r\n        < CardList robots={filteredRobots}/>\r\n        </Scroll>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport tachyons from 'tachyons';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    < App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}